/* DO NOT EDIT THIS FILE - it is machine generated */
#include "nodejs.h"
/* Header for class org_mo2me_node_NodeBroker */

#include <node.h>

#include <android/log.h>

#define LOGI(...) ((void)__android_log_print(ANDROID_LOG_INFO, "node.js", __VA_ARGS__))
#define LOGW(...) ((void)__android_log_print(ANDROID_LOG_WARN, "node.js", __VA_ARGS__))

static jboolean isCopy = NULL;

JavaVM* gvm = NULL;
jobject gData = NULL;


/*
 * Class:     org_mo2me_node_NodeBroker
 * Method:    runNodeJs
 * Signature: (Ljava/lang/String;)V
 */

void JNICALL Java_net_shuttleplay_node_NodeBroker_runNodeJs
  (JNIEnv * env, jclass, jobject context, jstring jstr)
{
	const char* filename = env->GetStringUTFChars(jstr, &isCopy);
	const char* argv[2] = {0, 0};
	argv[0] = "node";
	argv[1] =	filename;
	gData = context;
	LOGI("Script name is %s", filename);
	node::Start(2, (char**)argv);
	LOGI("Script is running");
}

void JNICALL Java_net_shuttleplay_node_NodeBroker_debugNodeJs
  (JNIEnv * env, jclass, jobject context, jstring jstr)
{
	const char* filename = env->GetStringUTFChars(jstr, &isCopy);
	const char* argv[3] = {0, 0, 0};
	argv[0] = "node";
	argv[1] = "--debug-brk";
	argv[2] =	filename;
	gData = context;
	LOGI("Script name is %s", filename);
	node::Start(3, (char**)argv);
	LOGI("Script is debugging");
}

jint JNI_OnLoad(JavaVM* vm, void* reserved)
{
	gvm = vm;
	return JNI_VERSION_1_4;
}
